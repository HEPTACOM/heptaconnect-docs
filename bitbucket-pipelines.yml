image: node:14-alpine

definitions:
    steps:
        -   step: &default
                artifacts:
                    - 'docs/**'
                clone:
                    depth: full
        -   step: &build-docs
                <<: *default
                caches:
                    - pip
                    - node
                artifacts:
                    - 'site/**'
                image: squidfunk/mkdocs-material
                name: Build documentation assets
                script:
                    - apk add --update --no-cache wget graphviz ttf-droid ttf-droid-nonlatin ttf-dejavu make bash openjdk8-jre gcc g++ libffi-dev libc-dev python3-dev jpeg-dev zlib-dev curl jq nodejs nodejs-npm
                    - wget "https://sourceforge.net/projects/plantuml/files/1.2021.9/plantuml.1.2021.9.jar/download" -O /tmp/plantuml.jar
                    - npm install --global cross-env
                    - npm ci --include=dev
                    - pip install -r requirements.txt
                    - 'PLANTUML="java -Djava.awt.headless=true -jar /tmp/plantuml.jar" PATH=.bin:$PATH make build'
        -   step: &commit-built-docs
                <<: *default
                name: Commit docs
                artifacts:
                    - docs/meta-descriptions.csv
                script:
                    - apk add --update --no-cache git openssh-client
                    - mv .gh-pages-gitignore .gitignore
                    - git rm -r docs/
                    - rm -rf docs/
                    - mv site/ docs/
                    - git stash
                    - git checkout -b gh-pages
                    - git stash apply
                    - git add --all
                    - test $(git diff --name-only --cached | wc -l) -eq 0 || git commit -m "Build gh-pages"
                    - git push --force origin gh-pages
        -   step: &publish-docs
                <<: *default
                name: Publish to github
                script:
                    - apk add --update --no-cache git openssh-client
                    - git remote add github git@github.com:HEPTACOM/heptaconnect-docs.git
                    - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
                    - git remote update
                    - git fetch --all
                    - git push --force github gh-pages
                    - git checkout --track origin/master
                    - git push --force github master

pipelines:
    branches:
        master:
            -   step: *build-docs
            -   step: *commit-built-docs
        gh-pages:
            -   step:
                    name: Skip for manual step
                    script:
                        - echo "hello"
            -   step:
                    <<: *publish-docs
                    deployment: production
                    trigger: manual
    pull-requests:
        '**':
            -   step: *build-docs
